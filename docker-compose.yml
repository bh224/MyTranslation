version: "3"

services:

      nginx:
        container_name: nginx
        build: ./nginx
        image: docker-server/nginx
        restart: always
        ports:
          - "80:80"
          - "443:443"
        volumes:
          - ./trans-manager:/srv/docker-server
          - ./log:/var/log/nginx
          - ./trans-manager/static:/srv/docker-server/static
          - ./data/certbot/www:/var/www/certbot
          - ./data/certbot/conf:/etc/letsencrypt
        command: "/bin/sh -c 'while :; do sleep 6h & wait $${!}; nginx -s reload; done & nginx -g \"daemon off;\"'"
        depends_on:
          - django

      certbot:
        image: certbot/certbot
        container_name: certbot
        restart: unless-stopped
        volumes:
          - ./data/certbot/conf:/etc/letsencrypt
          - ./data/certbot/www:/var/www/certbot
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

      django:
        container_name: django
        build: ./trans-manager
        image: docker-server/django
        restart: always
        command: gunicorn --bind :8000 --workers 2 config.wsgi:application --reload
        ports:
          - "8000:8000"
        volumes:
          - ./trans-manager:/srv/docker-server
          - ./logs:/src/docker-server/logs
        env_file:
          - ./trans-manager/.env.prod
        depends_on:
          - redis
          - celery

      redis:
        container_name: redis
        restart: always
        image: redis:latest
        ports:
          - "6379:6379"

      celery:
        image: docker-server/django
        container_name: celery
        restart: always
        volumes:
          - ./trans-manager:/srv/docker-server
        command: celery -A config.celery worker --loglevel=info
        depends_on:
          - redis

